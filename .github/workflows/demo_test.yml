name: Demo Test

# Controls when the action will run. Triggers the workflow on push or pull request
on: [push, pull_request]

env:
  nap_time: 60

# Cancel previous running jobs on push or pull request
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.event.pull_request.number }}
  cancel-in-progress: true

jobs:

  Filebench_test0:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test1:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test2:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test3:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test4:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test5:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test6:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test7:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test8:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test9:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test10:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test11:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test12:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test13:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test14:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test15:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test16:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test17:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test18:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test19:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"


  Filebench_test20:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"



  Filebench_test21:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        features: [Legacy, IO_Uring]
        os_ver: [ubuntu20.04, ubuntu22.04]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: Preinstall dependencies and build Filebench
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && ./preinstall_deps.sh && ./dl_and_build_filebench.sh"

    - name: Prepare occlum instance and Run Filebench on Ext2
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/benchmarks/filebench && SGX_MODE=SIM ./run_workload.sh readfiles"
