name: Demo Test

# Controls when the action will run. Triggers the workflow on push or pull request
on: [push, pull_request]

env:
  nap_time: 60

# Cancel previous running jobs on push or pull request
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  # Python glibc support test
  Python_glibc_support_test:
    runs-on: ubuntu-20.04
    steps:
    - name: Remove unnecessary files
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: ./.github/workflows/composite_action/sim
      with:
        container-name: ${{ github.job }}
        build-envs: 'OCCLUM_RELEASE_BUILD=1'

    - name: download conda and build python
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/python/python_glibc; ./install_python_with_conda.sh"

    - name: Run python3.10 multiprocessing demo
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos/python/python_glibc/python3.10-multiprocessing; ./install_python3.10.sh;
            SGX_MODE=SIM ./run_python3.10_on_occlum.sh"

    - name: Check multiprocessing demo's Occlum.json
      run: docker exec ${{ github.job }} bash -c "cat /root/occlum/demos/python/python_glibc/python3.10-multiprocessing/occlum_instance/Occlum.json"
    
    - name: Clean Python glibc test
      run: docker exec ${{ github.job }} bash -c "cd /root/occlum/demos && rm -rf ./python/python_glibc"
